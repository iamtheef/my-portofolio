{"version":3,"sources":["utils/isActive.ts","Components/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx","Context/LanguageContext.tsx","assets/Languages.js"],"names":["isActive","name","window","location","hash","Navbar","useContext","LanguageContext","language","setLanguage","getTags","navbar","home","experience","aboutMe","contact","useState","dropdown","setDropdown","className","to","onClick","type","id","data-toggle","style","marginLeft","aria-labelledby","Background","loadable","Intro","About","Experience","Contact","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","Language","content","GR","HEADER","INTRO","ABOUT_ME_TAG","PROFILE","WORK_EXP","EDUCATION","LANG_ARRAY","CONTACT_PROMPT","DOWNLOAD_CV","PINNED","CAT_OR_DOG","DESCRIPTION","CHAT_ROOM","GRAPHQL","POSTIT","iamAI","TITLE","EN","tags","profile","skills","education","books","languages","recent","buttons","viewAPI","viewRepo","viewClient","visitApp","pinned","createContext","english","LanguageProvider","children","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","Provider","value","getContent","l"],"mappings":"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","file":"static/js/main.06d38e2a.chunk.js","sourcesContent":["const isActive = (name: string) => {\n  const hash = window.location.hash;\n\n  return hash === name;\n};\n\nexport default isActive;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LanguageContext } from \"../Context/LanguageContext\";\nimport isActive from \"../utils/isActive\";\n\nexport const Navbar: React.FC = () => {\n  const { language, setLanguage, getTags } = useContext(LanguageContext);\n  const { home, experience, aboutMe, contact } = getTags().navbar;\n  const [dropdown, setDropdown] = useState(false);\n\n  return (\n    <div className=\"mt-4\">\n      <div className=\"container\">\n        <div className=\"row navbar\">\n          <div className=\"col\">\n            <div className=\"row pt-2\">\n              <Link\n                to=\"/\"\n                className={`col-lg navbar-button ${\n                  isActive(\"#/\") ? \"active\" : \"\"\n                }`}\n              >\n                {home}\n              </Link>\n              <Link\n                to=\"/experience\"\n                className={`col-lg navbar-button ${\n                  isActive(\"#/experience\") && \"active\"\n                }`}\n              >\n                {experience}\n              </Link>\n              <Link\n                className={`col-lg navbar-button ${\n                  isActive(\"#/about\") && \"active\"\n                }`}\n                to=\"/about\"\n              >\n                {aboutMe}\n              </Link>\n              <Link\n                className={`col-lg navbar-button ${\n                  isActive(\"#/contact\") && \"active\"\n                }`}\n                to=\"/contact\"\n              >\n                {contact}\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"dropdown\" onClick={() => setDropdown(!dropdown)}>\n            <button\n              className=\"btn dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n            >\n              {language}\n            </button>\n            <div\n              // negative margin is to make the menu open to the left of the button's bottom\n              style={{\n                marginLeft: \"-170%\",\n              }}\n              className={`dropdown-menu ${dropdown && \"expanded\"}`}\n              aria-labelledby=\"dropdownMenuButton\"\n            >\n              <div className=\"dropdown-item\" onClick={() => setLanguage(\"EN\")}>\n                EN\n              </div>\n              <div className=\"dropdown-item\" onClick={() => setLanguage(\"GR\")}>\n                GR\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport { LanguageProvider } from \"./Context/LanguageContext\";\nimport { Navbar } from \"./Components/Navbar\";\nimport loadable from \"@loadable/component\";\n\nconst Background = loadable(() => import(\"./Components/Background\"));\nconst Intro = loadable(() => import(\"./Components/Intro\"));\nconst About = loadable(() => import(\"./Components/About\"));\nconst Experience = loadable(() => import(\"./Components/Experience\"));\nconst Contact = loadable(() => import(\"./Components/Contact\"));\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <LanguageProvider>\n          <Navbar />\n          <Background />\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/experience\" component={Experience} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/contact\" component={Contact} />\n        </LanguageProvider>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { createContext, useState, useEffect } from \"react\";\nimport * as l from \"../assets/Languages\";\n\ntype Props = {\n  children: React.ReactNode;\n};\nenum Language {\n  english = \"EN\",\n  greek = \"GR\",\n}\ninterface LanguageContext {\n  language: Language;\n  setLanguage?: any;\n  getContent?: any;\n  getTags?: any;\n}\n\nexport const LanguageContext = createContext<LanguageContext>({\n  language: Language.english,\n});\n\nexport function LanguageProvider({ children }: Props) {\n  const [language, setLanguage] = useState<Language>(\n    JSON.parse(window.localStorage.getItem(\"lang\") as string) ||\n      Language.english\n  );\n\n  function getContent(): object {\n    return l.content[language];\n  }\n\n  function getTags(): object {\n    return l.tags[language];\n  }\n\n  useEffect(() => {\n    window.localStorage.setItem(\"lang\", JSON.stringify(language));\n  });\n\n  return (\n    <LanguageContext.Provider\n      value={{ language, setLanguage, getContent, getTags }}\n    >\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n","export const content = {\n  GR: {\n    HEADER: \"Καλώς ήρθατε. Χαίρομαι που θέλετε να με γνωρίσετε.\",\n\n    INTRO:\n      \"Ονομάζομαι Θεργιάκης Ευτύχιος, είμαι full-stack developer έχω γενηθεί και μεγαλώσει στο νησί της Κρήτης στην Ελλάδα. Είμαι εφευρετικός, αυτοδίδακτος, εργατικός και μαθαίνω γρήγορα. Ευέλικτος και ομαδικός. Ψάχνω μία θέση στον τομέα ανάπτυξης εφαρμογών όπου οι δεξιότητες μου θα προσφέρουν στο τελικό αποτέλεσμα, καθώς θα μου επιτρέπει να επεκτείνω τις γνώσεις μου στον τομέα του software. Με ενδιαφέρει αρκετά και ο τομέας του AI. Περισσότερα στην σελίδα\",\n\n    ABOUT_ME_TAG: \"Σχετικά με εμένα.\",\n\n    PROFILE:\n      \"Fullstack developer με προτίμηση στο backend. Μου αρέσουν οι άνθρωποι που χαμογελούν και έχουν χιούμορ, τα παζλς και οι γρίφοι και πιστεύω ότι ο προγραμματισμός ειναι ένας πιό κομψός τρόπος να λύνεις προβλήματα. Με γοητεύει το πως μια γραμμή κώδικα μπορεί να αλλάξει την καθημερινότητα κάποιου. Στον ελεύθερο μου χρόνο μου αρέσει να γράφω ηλεκτρονική μουσική.\",\n\n    WORK_EXP:\n      \"Έχω αναλάβει διάφορα αυτοσχέδια projects και όλα από αυτά έχουν ολοκληρωθεί επιτυχώς μέχρι στιγμής. Ένας κλώνος του reddit (fullstack), μία real-time messaging εφαρμογή με αυτοκαταστρεφόμενα μηνύματα και AES κρυπτογράφηση, ένα πλήρης λειτουργικό GraphQL και tested API σε SQL/NoSQL εκδόσεις, ένα μοντέλο AI που μπορεί να αναγνωρίσει ζώα και ένα έξυπνο chatbot που μπορεί να απαντήσει παντός τύπου ερωτήσεις είναι μερικά από αυτά. Θέλω να δοκιμάζω διαρκώς καινούρια πράγματα, τελευταίες τεχνολογίες, να συμμετέχω σε ομάδες με μεγαλύτερα projects και πάντα να μαθαίνω και να αναπτύσσω καινούριες δεξιότητες.\",\n\n    EDUCATION:\n      \"Έχω παρακολουθήσει πάνω από 400 ωρες στο Udemy και κατέχω τα παρακάτω πιστοποιητικά: \",\n\n    LANG_ARRAY: [\"Ελληνικά\", \"Αγγλικά\", \"Λίγα Γαλλικά και Ιταλικά\"],\n\n    CONTACT_PROMPT:\n      \"Εάν έχω ξεχάσει να αναφέρω κάτι μπορείτε πάντα να επικοινωνήσετε μαζί μου με τους εξής τρόπους:\",\n\n    DOWNLOAD_CV: \"Kατεβάστε το παρόν βιογραφικό\",\n\n    PINNED: {\n      CAT_OR_DOG: {\n        DESCRIPTION: \"ΑΙ μοντέλο που μπορεί να αναγνωρίσει γάτες και σκύλους.\",\n      },\n      CHAT_ROOM: {\n        DESCRIPTION:\n          \"Εφαρμογή συνομιλιών με προσωρινά μηνύματα και κρυπτογράφηση.\",\n      },\n      GRAPHQL: {\n        DESCRIPTION:\n          \"Ένα πλήρως λειτουργικό/δοκιμασμένο GraphQL API σε docker container.\",\n      },\n      POSTIT: {\n        DESCRIPTION:\n          \"Ένας κλώνος του reddit σε μικρότερη κλίμακα, API και εφαρμογή client.\",\n      },\n      iamAI: {\n        TITLE: \"iamAI\",\n        DESCRIPTION:\n          \"Ένα έξυπνο chatbot που απαντάει παντός τύπου ερωτήσεις, καθώς είναι και διαθέσιμο μέσω API.\",\n      },\n    },\n  },\n\n  EN: {\n    HEADER: \"Welcome. I am glad you want to know me.\",\n\n    INTRO:\n      \"My name is Thergiakis Eftichios, I am a full-stack developer born and raised in the island of Crete in Greece. A resourceful, self-motivated web developer who is hard working and a quick learner. I am flexible as well as team orientated. I am currently seeking for a web developer role where my existing qualifications will add value to the outset, whilst I continue to further develop my knowledge in the sector. I am eager to expand on AI sector. More on\",\n\n    ABOUT_ME_TAG: \"About Me.\",\n\n    PROFILE:\n      \" I am a fullstack web developer with a preference for the backend. I am quite humorous and I like people who smile and are open. Generally I love solving puzzles etc and I think programming is just that in a more elegant and professional level. Often get charmed by how a single line of code can affect someone's reality. Ι also like electronic music and I try to produce on my spare time.\",\n\n    WORK_EXP:\n      \" I 've been assigned several tasks for the last two years and all of them have been successfully completed. A reddit clone (fullstack), a real-time messaging app with trial messages and AES encryption, a fully functional and tested GraphQL API in SQL/NoSQL versions, an AI model trained to recognise cats and dogs and an intelligent chatbot that can answer all sorts of questions to mention a few. I am always eager to be involved in new things, contribute to team work and always to expand my knowledge and skills as much as I can. I am interested in the AI sector and I am currently in an entry level.\",\n\n    EDUCATION:\n      \"Total time spent on lectures on Udemy is over 400 hours and I have successfully obtained the certificates below: \",\n\n    LANG_ARRAY: [\"Greek\", \"English\", \"Basic French and Italian\"],\n\n    CONTACT_PROMPT:\n      \"If I left anything out or you have further questions feel free to contact me.\",\n\n    DOWNLOAD_CV: \"Download a printable document of my CV\",\n\n    PINNED: {\n      CAT_OR_DOG: {\n        DESCRIPTION: \"An AI model trained to recognize cats and dogs.\",\n      },\n      CHAT_ROOM: {\n        DESCRIPTION: \"Real-time messaging app with encrypted trial messages.\",\n      },\n      GRAPHQL: {\n        DESCRIPTION:\n          \"A fully functional and tested GraphQL server boilerplate container.\",\n      },\n      POSTIT: {\n        DESCRIPTION: \"A smaller scale reddit, client and API.\",\n      },\n\n      iamAI: {\n        TITLE: \"iamAI\",\n        DESCRIPTION:\n          \"A smart chatbot that can answer all sorts of questions, also available through an API.\",\n      },\n    },\n  },\n};\n\nexport const tags = {\n  GR: {\n    aboutMe: {\n      profile: \"ΠΡΟΦΙΛ\",\n      experience: \"ΕΡΓΑΣΙΑΚΗ ΕΜΠΕΙΡΙΑ\",\n      skills: \"ΔΕΞΙΟΤΗΤΕΣ ΚΑΙ ΤΕΧΝΟΓΝΩΣΙΑ\",\n      education: \"ΕΚΠΑΙΔΕΥΣΗ\",\n      books: \"BIBΛΙΑ\",\n      languages: \"ΓΛΩΣΣΕΣ\",\n    },\n    experience: {\n      recent: \"Πρόσφατα\",\n      buttons: {\n        viewAPI: \"Δείτε το API\",\n        viewRepo: \"Δείτε τον κώδικα\",\n        viewClient: \"Δείτε τον client\",\n        visitApp: \"Δείτε την εφαρμογή\",\n      },\n      pinned: \"Επιφανή\",\n    },\n    navbar: {\n      home: \"Αρχική\",\n      experience: \"Εμπειρία\",\n      aboutMe: \"Σχετικά με εμένα\",\n      contact: \"Επικοινωνήστε\",\n    },\n  },\n\n  EN: {\n    aboutMe: {\n      profile: \"PROFILE\",\n      experience: \"WORK EXPERIENCE\",\n      skills: \"SKILLS & KNOWLEDGE\",\n      education: \"EDUCATION\",\n      books: \"ΒΟΟΚS\",\n      languages: \"LANGUAGES\",\n    },\n    experience: {\n      recent: \"Recent\",\n      buttons: {\n        viewAPI: \"View API\",\n        viewRepo: \"View repository\",\n        viewClient: \"View client\",\n        visitApp: \"Visit app\",\n      },\n      pinned: \"Pinned\",\n    },\n    navbar: {\n      home: \"Home\",\n      experience: \"Experience\",\n      aboutMe: \"About Me\",\n      contact: \"Contact\",\n    },\n  },\n};\n"],"sourceRoot":""}