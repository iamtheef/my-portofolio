{"version":3,"sources":["utils/generateDigits.ts","utils/makeTable.tsx","Components/Background.tsx","utils/isActive.ts","Components/Navbar.tsx","Components/Intro.tsx","App.tsx","serviceWorker.ts","index.tsx","Context/LanguageContext.tsx"],"names":["generateDigits","digits","string","width","Math","floor","window","innerWidth","i","random","length","toString","Background","props","useState","table","setTable","useEffect","setInterval","lines","hash","location","document","documentElement","clientHeight","newTable","push","className","key","makeTable","children","isActive","name","Navbar","useContext","LanguageContext","language","setLanguage","isGreek","to","type","id","data-toggle","aria-labelledby","onClick","Intro","style","marginTop","fontWeight","fontSize","paddingLeft","paddingRight","About","loadable","Contact","Projects","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","Language","createContext","english","LanguageProvider","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value"],"mappings":"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","file":"static/js/main.74fd1703.chunk.js","sourcesContent":["export function generateDigits() {\n  const digits = [0, 1];\n\n  const num = () => Math.floor(Math.random() * digits.length);\n\n  let string = \"\";\n  let width = Math.floor(window.innerWidth / 400);\n  for (let i = 0; i <= width; i++) {\n    string = string + digits[num()].toString();\n  }\n  return string;\n}\n","import { generateDigits } from \"./generateDigits\";\nimport React from \"react\";\n\nexport const makeTable = () => {\n  let lines: number = 0;\n  const hash = window.location.hash;\n  if (hash === \"#/projects\") {\n    lines = 25;\n  } else if (hash === \"#/about\") {\n    lines = 30;\n  } else {\n    lines = Math.floor(document.documentElement.clientHeight / 100) + 2;\n  }\n\n  const newTable: any = [];\n\n  for (let i = 0; i < lines; i++) {\n    newTable.push(\n      <div className=\"header col\" key={i}>\n        {generateDigits()}\n      </div>\n    );\n  }\n  return <div>{newTable}</div>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { makeTable } from \"../utils/makeTable\";\n\nconst Background: React.FC = (props) => {\n  const [table, setTable] = useState(<div></div>);\n\n  useEffect(() => {\n    setInterval(() => {\n      setTable(makeTable());\n    }, 100);\n  }, [setTable]);\n\n  return (\n    <div className=\"container background nopadding\">\n      <div className=\"row\">\n        <div className=\"col-sm\">{table}</div>\n      </div>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Background;\n","const isActive = (name: string) => {\n  const hash = window.location.hash;\n\n  return hash === name;\n};\n\nexport default isActive;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LanguageContext } from \"../Context/LanguageContext\";\nimport isActive from \"../utils/isActive\";\n\nexport const Navbar: React.FC = () => {\n  const { language, setLanguage, isGreek } = useContext(LanguageContext);\n\n  return (\n    <div className=\"mt-4\">\n      <div className=\"container\">\n        <div className=\"row navbar\">\n          <div className=\"col\">\n            <div className=\"row\">\n              <Link\n                to=\"/\"\n                className={`col-lg navbar-button ${isActive(\"#/\") && \"active\"}`}\n              >\n                {isGreek() ? \"Αρχική\" : \"Home\"}\n              </Link>\n              <Link\n                className={`col-lg navbar-button ${\n                  isActive(\"#/projects\") && \"active\"\n                }`}\n                to=\"/projects\"\n              >\n                Projects\n              </Link>\n              <Link\n                className={`col-lg navbar-button ${\n                  isActive(\"#/about\") && \"active\"\n                }`}\n                to=\"/about\"\n              >\n                {isGreek() ? \"Σχετικά με εμένα\" : \"About Me\"}\n              </Link>\n              <Link\n                className={`col-lg navbar-button ${\n                  isActive(\"#/contact\") && \"active\"\n                }`}\n                to=\"/contact\"\n              >\n                {isGreek() ? \"Επικοινωνήστε\" : \"Contact\"}\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"dropdown\">\n            <button\n              className=\"btn dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n            >\n              {language}\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <div className=\"dropdown-item\" onClick={() => setLanguage(\"EN\")}>\n                EN\n              </div>\n              <div className=\"dropdown-item\" onClick={() => setLanguage(\"GR\")}>\n                GR\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { LanguageContext } from \"../Context/LanguageContext\";\nimport { Link } from \"react-router-dom\";\n\nconst Intro: React.FC = () => {\n  const { isGreek } = useContext(LanguageContext);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"hello marginTop\">\n        Hello, friend<span className=\"blink\">_</span>\n      </h1>\n\n      {!isGreek() ? (\n        <div>\n          <div className=\"intro\">Welcome. I am glad you want to know me.</div>\n          <p className=\"paragraph\" style={{ marginTop: \"23px\" }}>\n            My name is Thergiakis Eftichios, I am a full-stack developer born\n            and raised in the island of Crete in Greece. A resourceful,\n            self-motivated web developer who is hard working and a quick\n            learner. I am flexible as well as team orientated. I am currently\n            seeking for a web developer role where my existing qualifications\n            will add value to the outset, whilst I continue to further develop\n            my knowledge in the sector. I am eager to expand on AI sector. More\n            on\n            <Link\n              to=\"/about\"\n              className=\"col-sm navbar-button\"\n              style={{\n                fontWeight: \"bolder\",\n                fontSize: \"25px\",\n                paddingLeft: \"7px\",\n                paddingRight: \"7px\",\n              }}\n            >\n              About Me\n            </Link>\n            section.\n          </p>\n        </div>\n      ) : (\n        <div>\n          <div className=\"intro\">\n            Καλως ήρθατε. Χαίρομαι που θέλετε να με γνωρίσετε.\n          </div>\n\n          <p className=\"paragraph\" style={{ marginTop: \"23px\" }}>\n            Ονομάζομαι Θεργιάκης Ευτύχιος, είμαι full-stack developer έχω\n            γενηθεί και μεγαλώσει στο νησί της Κρήτης στην Ελλάδα. Είμαι\n            εφευρετικός, αυτοδίδακτος, εργατικός και μαθαίνω γρήγορα. Ευέλικτος\n            και ομαδικός. Ψάχνω μία θέση στον τομέα ανάπτυξης εφαρμογών όπου οι\n            δεξιότητες μου θα προσφέρουν στο τελικό αποτέλεσμα, καθώς θα μου\n            επιτρέπει να επεκτείνω τις γνώσεις μου στον τομέα του software. Με\n            ενδιαφέρει αρκετά και ο τομέας του AI. Περισσότερα στην σελίδα\n            <Link\n              to=\"/about\"\n              className=\"col-sm navbar-button\"\n              style={{\n                fontWeight: \"bolder\",\n                fontSize: \"25px\",\n                paddingLeft: \"7px\",\n                paddingRight: \"7px\",\n              }}\n            >\n              Σχετικά με εμένα\n            </Link>\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Intro;\n","import React from \"react\";\nimport loadable from \"@loadable/component\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport { LanguageProvider } from \"./Context/LanguageContext\";\nimport Background from \"./Components/Background\";\nimport { Navbar } from \"./Components/Navbar\";\nimport Intro from \"./Components/Intro\";\n\nconst About = loadable(() => import(\"./Components/AboutMe\"));\nconst Contact = loadable(() => import(\"./Components/Contact\"));\nconst Projects = loadable(() => import(\"./Components/Projects\"));\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <LanguageProvider>\n          <Navbar />\n          <Background />\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/contact\" component={Contact} />\n          />\n        </LanguageProvider>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { createContext, useState, useEffect } from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n};\nenum Language {\n  english = \"EN\",\n  greek = \"GR\",\n}\ninterface LanguageContext {\n  language?: Language;\n  setLanguage?: any;\n  isGreek?: any;\n}\n\nexport const LanguageContext = createContext<LanguageContext>({\n  language: Language.english,\n});\n\nexport function LanguageProvider({ children }: Props) {\n  const [language, setLanguage] = useState<Language>(\n    JSON.parse(window.localStorage.getItem(\"lang\") as string) ||\n      Language.english\n  );\n\n  function isGreek() {\n    return language === \"GR\";\n  }\n  useEffect(() => {\n    window.localStorage.setItem(\"lang\", JSON.stringify(language));\n  });\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, isGreek }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n"],"sourceRoot":""}