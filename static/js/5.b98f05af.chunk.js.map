{"version":3,"sources":["assets/loop.svg","assets/postit.gif","assets/graphql.png","assets/Loader.tsx","utils/getColor.ts","Components/ProjectCard.tsx","Components/Projects.tsx"],"names":["module","exports","Loader","className","style","marginTop","marginLeft","src","loop","alt","languages","colors","getColor","language","indexOf","length","ProjectCard","props","title","description","url","outline","width","href","color","fontSize","Projects","useState","loaded","setLoaded","projects","setProjects","isGreek","useContext","LanguageContext","useEffect","axios","get","then","data","catch","e","console","error","message","graphql","height","maxHeight","postit","map","project","i","key","html_url","name"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,oFCG5B,SAASC,IACtB,OACE,6BACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,OACb,yBACEA,UAAU,QACVC,MAAO,CAAEC,UAAW,UAAWC,WAAY,QAE3C,yBAAKC,IAAKC,IAAMC,IAAI,cAAcN,UAAU,yB,qBCZlDO,EAAY,CAAC,aAAc,aAAc,OAAQ,SAAU,SAC3DC,EAAS,CAAC,SAAU,SAAU,SAAU,SAAU,UAE3CC,EAAW,SAACC,GACvB,OAAqC,IAAjCH,EAAUI,QAAQD,GACbF,EAAOA,EAAOI,OAAS,GAEzBJ,EAAOD,EAAUI,QAAQD,KCsCnBG,EAlCsB,SAACC,GAAkB,IAC9CC,EAA+CD,EAA/CC,MAAOC,EAAwCF,EAAxCE,YAAaC,EAA2BH,EAA3BG,IAAKP,EAAsBI,EAAtBJ,SAAUQ,EAAYJ,EAAZI,QAE3C,OACE,yBAAKlB,UAAU,OAAOC,MAAO,CAAEkB,MAAO,QACpC,yBAAKnB,UAAS,oBAAekB,GAAW,cACtC,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,OAAOoB,KAAMH,GACvBF,GAEH,uBAAGf,UAAU,mBAAmBC,MAAO,CAAEC,UAAW,SACjDc,GAEH,uBACEhB,UAAU,YACVC,MAAO,CAAEoB,MAAM,IAAD,OAAMZ,EAASC,IAAaY,SAAU,SAEnDZ,IAGL,yBAAKV,UAAU,SACb,uBAAGoB,KAAMH,EAAKjB,UAAU,+BAAxB,sB,0CC8DCuB,UAjFY,WAAO,IAAD,EACHC,oBAAS,GADN,mBACxBC,EADwB,KAChBC,EADgB,OAECF,qBAFD,mBAExBG,EAFwB,KAEdC,EAFc,KAGvBC,EAAYC,qBAAWC,KAAvBF,QAcR,OAZAG,qBAAU,WACRC,IACGC,IAAI,4DACJC,MAAK,SAACR,GACLC,EAAYD,EAASS,MACrBV,GAAU,MAEXW,OAAM,SAACC,GACNC,QAAQC,MAAMF,EAAEG,cAEnB,IAEEhB,EAEH,yBAAKzB,UAAU,YAAYC,MAAO,CAAEC,UAAW,YAC7C,wBAAIF,UAAU,SAAS6B,IAAY,6CAAY,YAA/C,KACA,yBAAK7B,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QACb,yBACEA,UAAU,eACVI,IAAKsC,IACLzC,MAAO,CAAE0C,OAAQ,OAAQC,UAAW,SACpCtC,IAAI,eAEN,yBAAKN,UAAU,aACb,wBAAIA,UAAU,cAAd,oCACA,uBAAGA,UAAU,aAAb,yDAGA,uBACEoB,KAAK,kDACLpB,UAAU,mBAFZ,sBASN,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eAAeI,IAAKyC,IAAQvC,IAAI,eAC/C,yBAAKN,UAAU,aACb,wBAAIA,UAAU,cAAd,UACA,uBAAGA,UAAU,aAAb,mEAGA,uBACEoB,KAAK,uCACLpB,UAAU,mBAFZ,uBAWR,wBAAIA,UAAU,cAAc6B,IAAY,uCAAW,UAAnD,KACCF,EAASmB,KAAI,SAACC,EAAkBC,GAAnB,OACZ,yBAAKhD,UAAU,WAAWiD,IAAKF,EAAQG,UACrC,yBAAKlD,UAAU,UACb,kBAAC,EAAD,CACEe,MAAOgC,EAAQI,KACfnC,YAAa+B,EAAQ/B,YACrBC,IAAK8B,EAAQG,SACbxC,SAAUqC,EAAQrC,SAClBQ,QAAe,IAAN8B,UAvDD,kBAACjD,EAAD","file":"static/js/5.b98f05af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loop.e403121c.svg\";","module.exports = __webpack_public_path__ + \"static/media/postit.b977c6cc.gif\";","module.exports = __webpack_public_path__ + \"static/media/graphql.4bd220b9.png\";","import React from \"react\";\nimport loop from \"../assets/loop.svg\";\n\nexport default function Loader() {\n  return (\n    <div>\n      <div className=\"container text-center\">\n        <div className=\"row\">\n          <div\n            className=\"col-6\"\n            style={{ marginTop: \"-1800px\", marginLeft: \"25%\" }}\n          >\n            <img src={loop} alt=\"loader icon\" className=\"loaderIcon blink\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const languages = [\"TypeScript\", \"JavaScript\", \"HTML\", \"Python\", \"other\"];\nconst colors = [\"2b7489\", \"f1e05a\", \"ea452c\", \"eaa42c\", \"cce87f\"];\n\nexport const getColor = (language: string) => {\n  if (languages.indexOf(language) === -1) {\n    return colors[colors.length - 1];\n  }\n  return colors[languages.indexOf(language)];\n};\n","import React from \"react\";\nimport { getColor } from \"../utils/getColor\";\n\ninterface Props {\n  title: string;\n  description: string;\n  url: string;\n  language: string;\n  outline: boolean;\n}\n\nconst ProjectCard: React.FC<Props> = (props: Props) => {\n  const { title, description, url, language, outline } = props;\n\n  return (\n    <div className=\"card\" style={{ width: \"80%\" }}>\n      <div className={`card-body ${outline && \"spotlight\"}`}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <a className=\"mb-2\" href={url}>\n                {title}\n              </a>\n              <p className=\"card-description\" style={{ marginTop: \"10px\" }}>\n                {description}\n              </p>\n              <p\n                className=\"card-text\"\n                style={{ color: `#${getColor(language)}`, fontSize: \"13px\" }}\n              >\n                {language}\n              </p>\n            </div>\n            <div className=\"col-3\">\n              <a href={url} className=\"btn project-btn float-right\">\n                View Project\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport Loader from \"../assets/Loader\";\nimport axios from \"axios\";\nimport ProjectCard from \"./ProjectCard\";\nimport postit from \"../assets/postit.gif\";\nimport graphql from \"../assets/graphql.png\";\nimport { LanguageContext } from \"../Context/LanguageContext\";\n\ninterface Project {\n  name: string;\n  description: string;\n  html_url: string;\n  language: string;\n}\n\nconst Projects: React.FC = () => {\n  const [loaded, setLoaded] = useState(false);\n  const [projects, setProjects] = useState<any>();\n  const { isGreek } = useContext(LanguageContext);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.github.com/users/iamtheef/repos?sort=created\")\n      .then((projects) => {\n        setProjects(projects.data);\n        setLoaded(true);\n      })\n      .catch((e) => {\n        console.error(e.message);\n      });\n  }, []);\n\n  if (!loaded) return <Loader />;\n  return (\n    <div className=\"container\" style={{ marginTop: \"-1700px\" }}>\n      <h3 className=\"intro\">{isGreek() ? \"Επιφανή\" : \"Spotlight\"}:</h3>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <img\n              className=\"card-img-top\"\n              src={graphql}\n              style={{ height: \"auto\", maxHeight: \"246px\" }}\n              alt=\"server img\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">GraphQL - TypeScript boilerplate</h5>\n              <p className=\"card-text\">\n                A fully equiped boilerplate with GraphQL & TypeScript\n              </p>\n              <a\n                href=\"https://github.com/iamtheef/GraphQL_boilerplate\"\n                className=\"btn project-btn\"\n              >\n                View repository\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <img className=\"card-img-top\" src={postit} alt=\"postit gif\" />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Postit</h5>\n              <p className=\"card-text\">\n                A reddit clone. Find walkthrough gifs in the Github repository.\n              </p>\n              <a\n                href=\" https://github.com/iamtheef/Post-It\"\n                className=\"btn project-btn\"\n              >\n                View repository\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h3 className=\"intro mt-5\">{isGreek() ? \"Τρέχων\" : \"Current\"}:</h3>\n      {projects.map((project: Project, i: number) => (\n        <div className=\"row mb-4\" key={project.html_url}>\n          <div className=\"col-md\">\n            <ProjectCard\n              title={project.name}\n              description={project.description}\n              url={project.html_url}\n              language={project.language}\n              outline={i === 0}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}