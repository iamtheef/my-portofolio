{"version":3,"sources":["assets/chat-room.gif","assets/graphql.png","Components/Experience.tsx"],"names":["module","exports","Loader","loadable","ProjectCard","Experience","useState","loaded","setLoaded","projects","setProjects","isGreek","useContext","LanguageContext","useEffect","axios","get","then","data","catch","e","console","error","message","className","src","graphql","alt","href","chatRoom","map","project","i","key","html_url","title","name","description","url","language","outline"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,qICOrCC,EAASC,aAAS,kBAAM,gCACxBC,EAAcD,aAAS,kBAAM,iCA2FpBE,UAlFc,WAAO,IAAD,EACLC,oBAAS,GADJ,mBAC1BC,EAD0B,KAClBC,EADkB,OAEDF,qBAFC,mBAE1BG,EAF0B,KAEhBC,EAFgB,KAGzBC,EAAYC,qBAAWC,KAAvBF,QAcR,OAZAG,qBAAU,WACRC,IACGC,IAAI,4DACJC,MAAK,SAACR,GACLC,EAAYD,EAASS,MACrBV,GAAU,MAEXW,OAAM,SAACC,GACNC,QAAQC,MAAMF,EAAEG,cAEnB,IAEEhB,EAEH,yBAAKiB,UAAU,uBACb,wBAAIA,UAAU,SAASb,IAAY,6CAAY,YAA/C,KACA,yBAAKa,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,WAAWC,IAAKC,IAASC,IAAI,eAC5C,yBAAKH,UAAU,aACb,wBAAIA,UAAU,cAAd,oCACA,uBAAGA,UAAU,aAAb,yDAGA,uBACEI,KAAK,kDACLJ,UAAU,mBAFZ,sBASN,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,WAAWC,IAAKI,IAAUF,IAAI,iBAC7C,yBAAKH,UAAU,aACb,wBAAIA,UAAU,cAAd,aACA,uBAAGA,UAAU,aAAb,mDAGA,uBACEI,KAAK,wCACLJ,UAAU,mBAFZ,mBAMA,uBACEI,KAAK,mDACLJ,UAAU,mBAFZ,iBAWR,wBAAIA,UAAU,cAAcb,IAAY,uCAAW,UAAnD,KACCF,EAASqB,KAAI,SAACC,EAAkBC,GAAnB,OACZ,yBAAKR,UAAU,WAAWS,IAAKF,EAAQG,UACrC,yBAAKV,UAAU,UACb,kBAACpB,EAAD,CACE+B,MAAOJ,EAAQK,KACfC,YAAaN,EAAQM,YACrBC,IAAKP,EAAQG,SACbK,SAAUR,EAAQQ,SAClBC,QAAe,IAANR,UAxDD,kBAAC9B,EAAD","file":"static/js/6.d27384a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chat-room.fe5d707d.gif\";","module.exports = __webpack_public_path__ + \"static/media/graphql.4bd220b9.png\";","import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport chatRoom from \"../assets/chat-room.gif\";\nimport graphql from \"../assets/graphql.png\";\nimport { LanguageContext } from \"../Context/LanguageContext\";\nimport loadable from \"@loadable/component\";\n\nconst Loader = loadable(() => import(\"../assets/Loader\"));\nconst ProjectCard = loadable(() => import(\"./ProjectCard\"));\n\ninterface Project {\n  name: string;\n  description: string;\n  html_url: string;\n  language: string;\n}\n\nconst Experience: React.FC = () => {\n  const [loaded, setLoaded] = useState(false);\n  const [projects, setProjects] = useState<any>();\n  const { isGreek } = useContext(LanguageContext);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.github.com/users/iamtheef/repos?sort=created\")\n      .then((projects) => {\n        setProjects(projects.data);\n        setLoaded(true);\n      })\n      .catch((e) => {\n        console.error(e.message);\n      });\n  }, []);\n\n  if (!loaded) return <Loader />;\n  return (\n    <div className=\"container marginTop\">\n      <h3 className=\"intro\">{isGreek() ? \"Επιφανή\" : \"Spotlight\"}:</h3>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <img className=\"card-img\" src={graphql} alt=\"server img\" />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">GraphQL - TypeScript boilerplate</h5>\n              <p className=\"card-text\">\n                A fully equiped boilerplate with GraphQL & TypeScript\n              </p>\n              <a\n                href=\"https://github.com/iamtheef/GraphQL_boilerplate\"\n                className=\"btn project-btn\"\n              >\n                View repository\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <img className=\"card-img\" src={chatRoom} alt=\"chatRoom gif\" />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Chat Room</h5>\n              <p className=\"card-text\">\n                One-time messaging app with encrypted messages.\n              </p>\n              <a\n                href=\"https://github.com/iamtheef/chat-room\"\n                className=\"btn project-btn\"\n              >\n                View repository\n              </a>\n              <a\n                href=\"https://iamtheef-chat-room.herokuapp.com/#/login\"\n                className=\"btn project-btn\"\n              >\n                Visit App\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h3 className=\"intro mt-5\">{isGreek() ? \"Τρέχων\" : \"Current\"}:</h3>\n      {projects.map((project: Project, i: number) => (\n        <div className=\"row mb-4\" key={project.html_url}>\n          <div className=\"col-md\">\n            <ProjectCard\n              title={project.name}\n              description={project.description}\n              url={project.html_url}\n              language={project.language}\n              outline={i === 0}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Experience;\n"],"sourceRoot":""}