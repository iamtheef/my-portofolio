{"version":3,"sources":["Components/Experience.tsx"],"names":["Loader","loadable","ProjectCard","IamAI","Experience","getContent","useContext","LanguageContext","useState","loaded","setLoaded","projects","setProjects","getTags","WORK_EXP","aboutMe","useEffect","axios","get","then","data","catch","e","console","error","message","className","experience","pinned","style","marginTop","marginLeft","map","exp","period","description","recent","project","i","key","html_url","title","name","url","language"],"mappings":"2KAKMA,EAASC,aAAS,kBAAM,gCACxBC,EAAcD,aAAS,kBAAM,iCAC7BE,EAAQF,aAAS,kBAAM,gCAuEdG,UA9Dc,WAAO,IAC1BC,EAAeC,qBAAWC,KAA1BF,WADyB,EAELG,oBAAS,GAFJ,mBAE1BC,EAF0B,KAElBC,EAFkB,OAGDF,qBAHC,mBAG1BG,EAH0B,KAGhBC,EAHgB,KAIzBC,EAAYP,qBAAWC,KAAvBM,QACAC,EAAaT,IAAbS,SACAC,EAAYF,IAAZE,QAcR,OAZAC,qBAAU,WACRC,IACGC,IAAI,4DACJC,MAAK,SAACR,GACLC,EAAYD,EAASS,MACrBV,GAAU,MAEXW,OAAM,SAACC,GACNC,QAAQC,MAAMF,EAAEG,cAEnB,IAEEhB,EAEH,yBAAKiB,UAAU,uBACb,6BACE,wBAAIA,UAAU,SAASb,IAAUc,WAAWC,QAC5C,yBAAKF,UAAU,MAAMG,MAAO,CAAEC,UAAW,QACvC,kBAAC3B,EAAD,QAGJ,yBAAKuB,UAAU,MAAMG,MAAO,CAAEC,UAAW,OAAQC,WAAY,WAC3D,wBAAIL,UAAU,SAASX,EAAQY,YAC/B,yBAAKD,UAAU,UACb,4BACGZ,EAASkB,KAAI,SAACC,GAAD,OACZ,4BACE,2BACE,2BAAIA,EAAIC,SAEV,2BAAID,EAAIE,oBAOlB,wBAAIT,UAAU,cAAcb,IAAUc,WAAWS,QAChDzB,EAASqB,KAAI,SAACK,EAAkBC,GAAnB,OACZ,yBAAKZ,UAAU,WAAWa,IAAKF,EAAQG,UACrC,yBAAKd,UAAU,UACb,kBAACxB,EAAD,CACEuC,MAAOJ,EAAQK,KACfP,YAAaE,EAAQF,YACrBQ,IAAKN,EAAQG,SACbI,SAAUP,EAAQO,iBAjCV,kBAAC5C,EAAD","file":"static/js/13.ad867cd5.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { LanguageContext } from \"../Context/LanguageContext\";\nimport loadable from \"@loadable/component\";\n\nconst Loader = loadable(() => import(\"../assets/Loader\"));\nconst ProjectCard = loadable(() => import(\"./ProjectCard\"));\nconst IamAI = loadable(() => import(\"./iamAI\"));\n\ninterface Project {\n  name: string;\n  description: string;\n  html_url: string;\n  language: string;\n}\n\nconst Experience: React.FC = () => {\n  const { getContent } = useContext(LanguageContext);\n  const [loaded, setLoaded] = useState(false);\n  const [projects, setProjects] = useState<any>();\n  const { getTags } = useContext(LanguageContext);\n  const { WORK_EXP } = getContent();\n  const { aboutMe } = getTags();\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.github.com/users/iamtheef/repos?sort=created\")\n      .then((projects) => {\n        setProjects(projects.data);\n        setLoaded(false);\n      })\n      .catch((e) => {\n        console.error(e.message);\n      });\n  }, []);\n\n  if (!loaded) return <Loader />;\n  return (\n    <div className=\"container marginTop\">\n      <div>\n        <h3 className=\"intro\">{getTags().experience.pinned}</h3>\n        <div className=\"row\" style={{ marginTop: \"-2%\" }}>\n          <IamAI />\n        </div>\n      </div>\n      <div className=\"row\" style={{ marginTop: \"5rem\", marginLeft: \"0.3rem\" }}>\n        <h1 className=\"intro\">{aboutMe.experience}</h1>\n        <div className=\"col-12\">\n          <ul>\n            {WORK_EXP.map((exp: any) => (\n              <li>\n                <i>\n                  <b>{exp.period}</b>\n                </i>\n                <p>{exp.description}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <h3 className=\"intro mt-5\">{getTags().experience.recent}</h3>\n      {projects.map((project: Project, i: number) => (\n        <div className=\"row mb-4\" key={project.html_url}>\n          <div className=\"col-md\">\n            <ProjectCard\n              title={project.name}\n              description={project.description}\n              url={project.html_url}\n              language={project.language}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Experience;\n"],"sourceRoot":""}